abstract class Account {
    protected String id; protected double balance;

    public Account(String id, double balance) {
        this.id = id; this.balance = balance;
    }

    public double getBalance() { return balance; }
    public abstract boolean withdraw(double amount);
    public abstract void deposit(double amount);
}

class SavingsAccount extends Account {
    private static final double MIN_BALANCE = 10, WITHDRAWAL_FEE = 2;

    public SavingsAccount(String id, double initialDeposit) {
        super(id, initialDeposit < MIN_BALANCE ? throw new IllegalArgumentException("Min $10") : initialDeposit);
    }

    public boolean withdraw(double amount) {
        if (amount + WITHDRAWAL_FEE <= balance - MIN_BALANCE) {
            balance -= (amount + WITHDRAWAL_FEE); return true;
        }
        return false;
    }

    public void deposit(double amount) { balance += amount; }
}

public class Main {
    public static void main(String[] args) {
        SavingsAccount acc = new SavingsAccount("SA123", 50);
        acc.deposit(20);
        System.out.println("Balance: $" + acc.getBalance());

        for (double amt : new double[]{30, 15}) {
            if (acc.withdraw(amt)) 
                System.out.println("New Balance: $" + acc.getBalance());
            else 
                System.out.println("Insufficient funds.");
        }
    }
}
