import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Custom Exception Class
class StudentRegistrationException extends Exception {
    public StudentRegistrationException(String message) {
        super(message); // Call the constructor of the parent Exception class
    }
}

// Student Class
class Student {
    private String studentId;
    private String name;

    public Student(String studentId, String name) {
        this.studentId = studentId;
        this.name = name;
    }

    public String getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }
}

// Registration Class
class Registration {
    private List<Student> students = new ArrayList<>();

    public void registerStudent(String studentId, String name) throws StudentRegistrationException {
        // Check for invalid input
        if (studentId == null || studentId.isEmpty() || name == null || name.isEmpty()) {
            throw new StudentRegistrationException("Error: Student ID and Name cannot be empty.");
        }

        // Check for duplicate registration
        for (Student student : students) {
            if (student.getStudentId().equals(studentId)) {
                throw new StudentRegistrationException("Error: Student ID " + studentId + " is already registered.");
            }
        }

        // Register the new student
        students.add(new Student(studentId, name));
        System.out.println("Student " + name + " registered successfully.");
    }
}

// Main Class
public class Main {
    public static void main(String[] args) {
        Registration registrationSystem = new Registration();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.print("Enter Student ID (or 'exit' to quit): ");
            String studentId = scanner.nextLine();
            if (studentId.equalsIgnoreCase("exit")) break;

            System.out.print("Enter Student Name: ");
            String name = scanner.nextLine();

            try {
                registrationSystem.registerStudent(studentId, name);
            } catch (StudentRegistrationException e) {
                System.out.println(e.getMessage()); // Display the error message from the exception
            }
        }

        scanner.close();
    }
}
